version: '3.8'

services:
  salesapp-mysql:
    image: mysql:8.0
    container_name: salesapp-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - salesapp-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  eureka-discovery:
    build: ./eureka-discovery
    container_name: eureka-discovery
    ports:
      - "8761:8761"
    networks:
      - salesapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  config-service:
    build: ./config-service
    container_name: config-service
    ports:
      - "8888:8888"
    depends_on:
      - eureka-discovery
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8085:8085"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  client-service:
    build: ./client-service
    container_name: client-service
    ports:
      - "8081:8081"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_clients?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  produit-service:
    build: ./produit-service
    container_name: produit-service
    ports:
      - "8082:8082"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_produits?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  dispositif-service:
    build: ./dispositif-service
    container_name: dispositif-service
    ports:
      - "8484:8484"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_dispositifs?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  facture-service:
    build: ./facture-service
    container_name: facture-service
    ports:
      - "8383:8383"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_factures?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  reglement-service:
    build: ./reglement-service
    container_name: reglement-service
    ports:
      - "8007:8007"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_reglements?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  devise-service:
    build: ./devise-service
    container_name: devise-service
    ports:
      - "8087:8087"
    depends_on:
      - salesapp-mysql
      - eureka-discovery
      - config-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://salesapp-mysql:3306/salesapp_devises?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8181:8181"
    depends_on:
      - eureka-discovery
      - config-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-discovery:8761/eureka/
    networks:
      - salesapp-network
    restart: unless-stopped

  angular-frontend:
    build: ./angular-frontend
    container_name: angular-frontend
    ports:
      - "4200:80"
    depends_on:
      - api-gateway
    networks:
      - salesapp-network
    restart: unless-stopped

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-custom
    ports:
      - "8070:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - salesapp-network
    restart: unless-stopped

volumes:
  mysql_data:
  jenkins_home:

networks:
  salesapp-network:
    driver: bridge
