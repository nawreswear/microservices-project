name: Microservices CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_TAG: latest

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build all Spring Boot microservices
      run: |
        for service in eureka-discovery config-service auth-service client-service produit-service dispositif-service facture-service reglement-service api-gateway; do
          cd $service
          ./mvnw clean package -DskipTests
          cd ..
        done

    - name: Docker Login
      run: echo "${{ env.DOCKER_PASS }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

    - name: Build & Push Docker Images - Spring Boot Services
      run: |
        for service in eureka-discovery config-service auth-service client-service produit-service dispositif-service facture-service reglement-service api-gateway; do
          docker build -t ${{ env.DOCKER_USER }}/$service:${{ env.IMAGE_TAG }} ./$service
          docker push ${{ env.DOCKER_USER }}/$service:${{ env.IMAGE_TAG }}
        done

    - name: Deploy on VPS via SSH
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          for service in eureka-discovery config-service auth-service client-service produit-service dispositif-service facture-service reglement-service api-gateway; do
            docker pull ${{ env.DOCKER_USER }}/$service:${{ env.IMAGE_TAG }}
          done
          docker-compose -f ~/deploy/docker-compose.yml up -d
